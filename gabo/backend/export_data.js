const sqlite3 = require('sqlite3').verbose();
const path = require('path');
const fs = require('fs');

const DB_PATH = path.join(__dirname, 'netcafe.db');
const db = new sqlite3.Database(DB_PATH);

let sqlOutput = '-- Data export from local database\n\n';

console.log('üîÑ Exporting data from local database...');

// Export courses
db.all("SELECT * FROM courses", (err, courses) => {
    if (err) {
        console.error('‚ùå Error reading courses:', err.message);
    } else {
        console.log(`üìö Found ${courses.length} courses`);
        
        courses.forEach(course => {
            sqlOutput += `INSERT OR IGNORE INTO courses (id, title, description, category_id, difficulty, duration_hours, price, instructor, content, objectives, prerequisites, is_active, featured, created_at) VALUES `;
            sqlOutput += `(${course.id}, '${course.title.replace(/'/g, "''")}', '${course.description.replace(/'/g, "''")}', ${course.category_id || 1}, '${course.difficulty}', 2, ${course.price_tokens || 100}, '${course.instructor_name || '–ò–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä'}', '–°—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –Ω–∞ –∫—É—Ä—Å–∞', '–¶–µ–ª–∏ –Ω–∞ –∫—É—Ä—Å–∞', '–ù—è–º–∞', 1, ${course.is_featured ? 1 : 0}, datetime('now'));\n`;
        });
        
        sqlOutput += '\n';
    }
    
    // Export tournaments (if any)
    db.all("SELECT * FROM tournaments", (err, tournaments) => {
        if (err) {
            console.error('‚ùå Error reading tournaments:', err.message);
        } else {
            console.log(`üèÜ Found ${tournaments.length} tournaments`);
            
            tournaments.forEach(tournament => {
                sqlOutput += `INSERT OR IGNORE INTO tournaments (id, name, description, game, start_date, end_date, entry_fee, max_participants, prize_pool, status, rules, created_at) VALUES `;
                sqlOutput += `(${tournament.id}, '${tournament.name.replace(/'/g, "''")}', '${tournament.description.replace(/'/g, "''")}', '${tournament.category || 'Sim Racing'}', '${tournament.start_date || '2025-07-01 18:00:00'}', '${tournament.end_date || '2025-07-01 20:00:00'}', ${tournament.entry_fee || 50}, ${tournament.max_participants || 20}, ${tournament.prize_pool || 1000}, '${tournament.status || 'upcoming'}', '${tournament.rules || '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏ –ø—Ä–∞–≤–∏–ª–∞'}', datetime('now'));\n`;
            });
            
            sqlOutput += '\n';
        }
        
        // Add some additional sample data
        sqlOutput += `-- Additional sample data
INSERT OR IGNORE INTO tournaments (name, description, game, start_date, end_date, entry_fee, max_participants, prize_pool, status, rules, created_at) VALUES 
('Formula 1 Championship 2025', '–û—Ñ–∏—Ü–∏–∞–ª–µ–Ω —à–∞–º–ø–∏–æ–Ω–∞—Ç –ø–æ Formula 1', 'F1 2024', '2025-07-01 18:00:00', '2025-07-15 20:00:00', 100, 32, 5000, 'upcoming', '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏ –ø—Ä–∞–≤–∏–ª–∞ –Ω–∞ FIA', datetime('now')),
('GT3 Sprint Series', '–ö—Ä–∞—Ç–∫–∞ —Å–µ—Ä–∏—è —Å—ä—Å—Ç–µ–∑–∞–Ω–∏—è —Å GT3 –∫–æ–ª–∏', 'Assetto Corsa Competizione', '2025-06-30 19:00:00', '2025-06-30 22:00:00', 50, 24, 2000, 'open', 'Sprint —Ñ–æ—Ä–º–∞—Ç - 3 —Å—ä—Å—Ç–µ–∑–∞–Ω–∏—è', datetime('now')),
('Rookie Cup', '–¢—É—Ä–Ω–∏—Ä –∑–∞ –Ω–∞—á–∏–Ω–∞–µ—â–∏ –ø–∏–ª–æ—Ç–∏', 'Gran Turismo 7', '2025-07-10 17:00:00', '2025-07-10 19:00:00', 25, 16, 500, 'upcoming', '–°–∞–º–æ –∑–∞ –ø–∏–ª–æ—Ç–∏ –ø–æ–¥ Safety Rating B', datetime('now'));

-- Add bookings
INSERT OR IGNORE INTO bookings (user_id, simulator_id, start_time, end_time, duration_minutes, status, total_cost, payment_status, notes, created_at) VALUES
(13, 1, '2025-06-28 14:00:00', '2025-06-28 16:00:00', 120, 'confirmed', 240, 'paid', 'Formula 1 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', datetime('now')),
(23, 2, '2025-06-28 18:00:00', '2025-06-28 19:30:00', 90, 'confirmed', 180, 'paid', 'GT3 —Å–µ—Å–∏—è', datetime('now')),
(13, 3, '2025-06-29 10:00:00', '2025-06-29 12:00:00', 120, 'pending', 240, 'pending', 'Rally —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞', datetime('now'));

-- Add simulators
INSERT OR IGNORE INTO simulators (name, type, description, hourly_rate, is_active, specifications, location, created_at) VALUES
('Formula Pro Simulator', 'Formula', '–ü—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–µ–Ω Formula —Å–∏–º—É–ª–∞—Ç–æ—Ä —Å 3 –º–æ–Ω–∏—Ç–æ—Ä–∞', 120, 1, 'Triple screen, Direct Drive wheel, Load cell pedals', '–ó–∞–ª–∞ 1', datetime('now')),
('GT Racing Rig', 'GT', 'GT —Å–∏–º—É–ª–∞—Ç–æ—Ä –∑–∞ —Å–ø–æ—Ä—Ç–Ω–∏ –∫–æ–ª–∏', 100, 1, 'Ultrawide monitor, T300 wheel, Sparco seat', '–ó–∞–ª–∞ 2', datetime('now')),
('Rally Simulator', 'Rally', '–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω Rally —Å–∏–º—É–ª–∞—Ç–æ—Ä', 90, 1, 'VR headset, Handbrake, Sequential shifter', '–ó–∞–ª–∞ 3', datetime('now'));
`;
        
        // Write to file
        fs.writeFileSync('export_data.sql', sqlOutput);
        console.log('‚úÖ Data exported to export_data.sql');
        
        db.close();
    });
}); 